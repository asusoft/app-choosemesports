enum VRejectionReason {
  QUALITY
  VIOLATION_OF_POLICY
  DURATION
} 

input RejectionIn {
    videoID: ID!
    reason: VRejectionReason!
}

type Admin {
    id: ID!
    login: String!
}

type AuthAdmin {
    admin: Admin!
    token: String!
}

input AdminIn {
    password: String!
    login: String!
}

union AuthAdminOrEWF = AuthAdmin | ErrorWithFields
union AuthAdminOrBE = AuthAdmin | BaseError
union AdminOrBE = Admin | BaseError

type Mutation {
    adminLogout(token: String!): BaseError
    changeAdminPassword(oldPassword: String!, newPassword: String!): ErrorWithFields
    adminLogin(input: AdminIn): AuthAdminOrBE!
    createAdmin(input: AdminIn): AuthAdminOrEWF!

    rejectVideo(input: RejectionIn!): BaseError
    acceptVideo(videoID: ID!): BaseError
}

type Query {
    getAdminMe: AdminOrBE!
    getVideoRequests(
        skip: Int! = 0,
        limit: Int! = 20
    ): VideoRequestListOrBE!
}