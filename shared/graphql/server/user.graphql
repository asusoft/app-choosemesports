enum ERole {
    PLAYER
    SCOUT
}

enum Gender {
    MALE
    FEMALE
    OTHER
    UNKNOWN
}

type User {
    id: ID!
    name: String!
    login: String!
    email: String!
    role: ERole!
    avatar: File
    bio: String
}

input UserInUpdate {
    login: String
    email: String
    bio: String
    avatarID: String
}

union UserOrBE = User | BaseError

extend type Mutation {
    updateUser(data: UserInUpdate!): ErrorWithFields
}

extend type Query {
    retrieveUser(id: ID!): UserOrBE!
}